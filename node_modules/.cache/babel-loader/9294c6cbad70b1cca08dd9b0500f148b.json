{"ast":null,"code":"var _jsxFileName = \"/Users/christianabel/Desktop/lemontree/lemontree/src/components/main/mainContent.js\";\nimport React, { Component } from 'react';\nimport './mainContent.css';\nimport { Link } from 'react-router-dom';\nimport Header from '../headerComponent/header.js';\nimport Background from '../background/background.js';\nimport mobileBackgroundImage from './mainImg/citrus1.png';\nimport bgVideoMp4 from './videoplayback.mp4';\nimport bgVideoWeb from './videoplayback.webm';\n\nclass MainContent extends Component {\n  constructor() {\n    super();\n\n    this.handleWindowSizeChange = () => {\n      this.setState({\n        width: window.innerWidth\n      });\n    };\n\n    this.state = {\n      width: window.innerWidth\n    };\n  }\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange);\n  } // make sure to remove the listener\n  // when the component is not mounted anymore\n\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  render() {\n    const width = this.state.width;\n    const isMobile = width <= 900;\n\n    if (isMobile) {\n      return React.createElement(\"div\", {\n        className: \"mainContentMobile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: mobileBackgroundImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"body\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mainContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"video\", {\n        playsinline: true,\n        autoPlay: true,\n        muted: true,\n        loop: true,\n        style: {\n          position: \"fixed\",\n          marginleft: \"auto\",\n          marginright: \"auto\",\n          height: \"100%\",\n          left: 0,\n          top: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"source\", {\n        src: bgVideoWeb,\n        type: \"video/webm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"source\", {\n        src: bgVideoMp4,\n        type: \"video/mp4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), \"Your Browser does not Support the Video\"), React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      })));\n    }\n  }\n\n}\n\nexport default MainContent;","map":{"version":3,"sources":["/Users/christianabel/Desktop/lemontree/lemontree/src/components/main/mainContent.js"],"names":["React","Component","Link","Header","Background","mobileBackgroundImage","bgVideoMp4","bgVideoWeb","MainContent","constructor","handleWindowSizeChange","setState","width","window","innerWidth","state","componentWillMount","addEventListener","componentWillUnmount","removeEventListener","render","isMobile","position","marginleft","marginright","height","left","top"],"mappings":";AAAA,OAAOA,KAAP,IACIC,SADJ,QAEO,OAFP;AAIA,OAAO,mBAAP;AAEA,SACIC,IADJ,QAEO,kBAFP;AAIA,OAAOC,MAAP,MAAmB,8BAAnB;AAGA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,qBAAP,MAAkC,uBAAlC;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;;AAKA,MAAMC,WAAN,SAA0BP,SAA1B,CAAoC;AAGpCQ,EAAAA,WAAW,GAAG;AACZ;;AADY,SAiBdC,sBAjBc,GAiBW,MAAM;AAC7B,WAAKC,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAEC,MAAM,CAACC;AAAhB,OAAd;AACD,KAnBa;;AAEZ,SAAKC,KAAL,GAAa;AACXH,MAAAA,KAAK,EAAEC,MAAM,CAACC;AADH,KAAb;AAGD;;AAEGE,EAAAA,kBAAkB,GAAG;AACvBH,IAAAA,MAAM,CAACI,gBAAP,CAAwB,QAAxB,EAAkC,KAAKP,sBAAvC;AACD,GAZmC,CAchC;AACJ;;;AACAQ,EAAAA,oBAAoB,GAAG;AACrBL,IAAAA,MAAM,CAACM,mBAAP,CAA2B,QAA3B,EAAqC,KAAKT,sBAA1C;AACD;;AAOGU,EAAAA,MAAM,GAAG;AAAA,UACLR,KADK,GACK,KAAKG,KADV,CACLH,KADK;AAEX,UAAMS,QAAQ,GAAGT,KAAK,IAAI,GAA1B;;AAGM,QAAIS,QAAJ,EAAa;AACb,aAII;AAAK,QAAA,SAAS,EAAG,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA;AAAK,QAAA,GAAG,EAAGhB,qBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,EAKA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALA,CAJJ;AAeG,KAhBH,MAiBI;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACJ;AAAK,QAAA,SAAS,EAAE,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AACA,QAAA,WAAW,MADX;AACY,QAAA,QAAQ,MADpB;AACqB,QAAA,KAAK,MAD1B;AAC2B,QAAA,IAAI,MAD/B;AACgC,QAAA,KAAK,EACjC;AACIiB,UAAAA,QAAQ,EAAE,OADd;AAEIC,UAAAA,UAAU,EAAE,MAFhB;AAGIC,UAAAA,WAAW,EAAE,MAHjB;AAIIC,UAAAA,MAAM,EAAE,MAJZ;AAKIC,UAAAA,IAAI,EAAE,CALV;AAMIC,UAAAA,GAAG,EAAE;AANT,SAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAYA;AAAQ,QAAA,GAAG,EACPpB,UADJ;AAEE,QAAA,IAAI,EAAG,YAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZA,EAgBA;AAAQ,QAAA,GAAG,EACPD,UADJ;AAEE,QAAA,IAAI,EAAG,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBA,4CADA,EAyBI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAzBJ,CADI,CADJ;AAoCH;AACJ;;AArF+B;;AAwFpC,eAAeE,WAAf","sourcesContent":["import React, {\n    Component\n} from 'react';\n\nimport './mainContent.css';\n\nimport {\n    Link\n} from 'react-router-dom';\n\nimport Header from '../headerComponent/header.js';\n\n\nimport Background from '../background/background.js';\nimport mobileBackgroundImage from './mainImg/citrus1.png';\nimport bgVideoMp4 from './videoplayback.mp4';\nimport bgVideoWeb from './videoplayback.webm'\n\n\n\n\nclass MainContent extends Component {\n\n\nconstructor() {\n  super();\n  this.state = {\n    width: window.innerWidth,\n  };\n}\n    \n    componentWillMount() {\n  window.addEventListener('resize', this.handleWindowSizeChange);\n}\n    \n    // make sure to remove the listener\n// when the component is not mounted anymore\ncomponentWillUnmount() {\n  window.removeEventListener('resize', this.handleWindowSizeChange);\n}\n\nhandleWindowSizeChange = () => {\n  this.setState({ width: window.innerWidth });\n};\n\n\n    render() {\nconst { width } = this.state;\n  const isMobile = width <= 900;\n\n        \n        if (isMobile){\n        return (\n\n\n\n            <div className = \"mainContentMobile\" >\n\n            <img src= {mobileBackgroundImage}/>\n\n\n            <Header / >\n\n\n\n\n            </div>\n        );}\n        else{\n            return(\n                <body>\n            <div className =\"mainContent\">\n            <video  \n            playsinline autoPlay muted loop style = {\n                {\n                    position: \"fixed\",\n                    marginleft: \"auto\",\n                    marginright: \"auto\",\n                    height: \"100%\",\n                    left: 0,\n                    top: 0\n                }\n            } >\n\n            <source src = {\n                bgVideoWeb\n            } type = \"video/webm\" />\n                \n            <source src = {\n                bgVideoMp4\n            } type = \"video/mp4\" / >\n           \n            Your Browser does not Support the Video \n                \n                </video>\n                \n                <Header/>\n                \n           </div>\n                </body>\n            );\n            \n            \n            \n            \n        }\n    }\n}\n\nexport default MainContent;"]},"metadata":{},"sourceType":"module"}